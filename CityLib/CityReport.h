/**
 * @file CityReport.h
 *
 * @author Aiden Dixon
 *
 * The city report is generated by the members of the city.
 * It is a collection of objects of type MemberReport.
 */

#pragma once

#include <memory>
#include <vector>
#include <random>
#include <list>

class City;
class MemberReport;

/**
 * The city report is generated by the members of the city.
 * It is a collection of objects of type MemberReport.
*/
class CityReport
{
private:
    /// The city this report is for
    City* mCity;

    /// Random number generator
    std::mt19937 mRandom;

protected:
    /// Size of the bins in the linked list
    static const int BinSize = 7;

    /// A bin stores up to 7 city reports in a
    /// single linked list node.
    class ReportsBin {
    public:
        /// A place to store the reports in this bin
        /// Up to 7 reports can be stored, followed by
        /// a null pointer after the last report pointer.
        std::shared_ptr<MemberReport> mReports[BinSize+1];

        bool IsFull();
        void Add(std::shared_ptr<MemberReport> report);
    };

    /// The collection of reports
    std::list<std::shared_ptr<ReportsBin>> mReportBins;

public:
    explicit CityReport(City* city);

    void Add(std::shared_ptr<MemberReport> report);
};

